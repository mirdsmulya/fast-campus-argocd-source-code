name: CI/CD to ECR and GitOps

on:
  # Triggers the workflow on push or pull request events for main
  push:  
    tags: [ v*.*.* ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-1                              # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: fast-campus                             # set this to your ECR repository name 
  HELM_CHART_PATH: kubernetes/service-app/hello-world     # set this to your destination gitops repo Helm chart path             
  WORKSPACE: mirdsmulya                                   # set this to your GitHub username    
  GITOPS_REPO: fast-campus-argocd-gitops                  # set this to your destination gitops repo name
  TAGS_VERSION: ${{ github.ref_name }}                    # set this to your GitHub tag version
  

# A workflow run is made up of one or more jobs 
jobs:
  # This workflow contains a job called "Run Go tests"
  # go-test:
  #   name: Run Go tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v2

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.22

  #     - name: Run tests
  #       run: go test -v ./...

  # # This workflow contains a job called "build and push image"
  # build-and-push-image:
  #   # The type of runner that the job will run on
  #   name: Build and push Image to Amazon ECR
  #   needs: go-test
  #   runs-on: ubuntu-latest
  #   if: startsWith (github.ref, 'refs/tags/')

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ env.AWS_REGION }}

  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v2

  #     - name: Build, tag, and push docker image to Amazon ECR
  #       env:
  #         REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         REPOSITORY: ${{ env.ECR_REPOSITORY }}
  #         IMAGE_TAG: ${{  github.ref_name }}
  #       run: |
  #         docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
  #         docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  update-helm-image-tag:
    runs-on: ubuntu-latest
    # needs: build-and-push-image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.WORKSPACE }}/${{ env.GITOPS_REPO }}
          token: ${{ secrets.REPO_TOKEN }}

      - name: Set remote URL for GitHub
        run: git remote set-url origin https://${{ secrets.REPO_TOKEN }}@github.com/$WORKSPACE/$DEPLOYMENT_REPO

      - name: Install dependencies
        run: | 
          sudo apt-get update && sudo apt-get install -y jq
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.6.1/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Update image tag in values.yaml
        run: | 
          cd $HELM_CHART_PATH
          yq eval -j values.yaml > values.json
          jq --arg tag "$TAGS_VERSION" '(.image.tag) |= $tag' values.json > tmp.json
          yq eval -P tmp.json > values.yaml
          rm values.json tmp.json

      - name: Commit changes and push to GitHub
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "devops@fastcampus.com"
          git remote set-url origin https://${{ secrets.REPO_TOKEN }}@github.com/$WORKSPACE/$DEPLOYMENT_REPO
          git add -A
          git commit -m "Automatically promoting new image version $TAGS_VERSION"
          git push

      - name: Display updated YAML
        run: cat values.yaml